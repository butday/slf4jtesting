group 'com.portingle'
version '1.1.3'

apply plugin: 'maven'

archivesBaseName = "slf4jtesting"

apply plugin: 'java'
apply plugin: 'com.portingle.classpathHell'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        // check maven central for the latest release
        classpath 'com.portingle:classpath-hell:1.2'
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.24'

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

test {
    testLogging.showStandardStreams = true
}

classpathHell {
  resourceExclusions = [
          "LICENSE.txt",
          "^META-INF/.*",
          "org/"
  ]
}

build.dependsOn(['checkClasspath'])

task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}


// TODO ....
// consider using the Gradle Nexus Staging Maven as this avoids need to use the NExus gui to close and release the stage artifact.
// if the sonatypeUsername is provided by the gradle properties then a release is enabled

if (project.properties.containsKey("sonatypeUsername")) {
    apply plugin: 'signing'

    signing {
        sign configurations.archives
    }


    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }

                pom.project {
                    name 'slf4jtesting'
                    packaging 'jar'

                    // optionally artifactId can be defined here
                    description 'SLF4JTesting is a library that provides facilities for log testing that are simple to use and optimised for use in environments with concurrent test execution and/or where console logging is desired.'
                    url 'https://github.com/portingle/slf4jtesting'

                    scm {
                        connection 'scm:git@github.com:portingle/slf4jtesting.git'
                        developerConnection 'scm:git@github.com:portingle/slf4jtesting.git'
                        url 'scm:git@github.com:portingle/slf4jtesting.git'
                    }

                    licenses {
                        license {
                            name 'The MIT Licence (MIT)'
                            url 'https://opensource.org/licenses/MIT'
                        }
                    }

                    developers {
                        developer {
                            id 'Johnlon'
                            name 'John Lonergan'
                        }
                    }
                }
            }
        }
    }
}
